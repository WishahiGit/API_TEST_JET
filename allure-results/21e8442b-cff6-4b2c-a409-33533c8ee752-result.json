{"name": "test_update_users[Valid-Update Full Data]", "status": "failed", "statusDetails": {"message": "Failed: [ERROR] Invalid book_id from Excel: 'None'", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x000001EE03A6D480>, data = {'action': 'update_by_id', 'author': 'Updated Name', 'book_id': '', 'expected': True, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n>           book_id = extract_book_id(data, fallback_id=self.__class__.created_ids[0])\nE           IndexError: list index out of range\n\ntests\\test_api_resource.py:45: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_api_resource.TestusersAPI object at 0x000001EE03A6D480>, data = {'action': 'update_by_id', 'author': 'Updated Name', 'book_id': '', 'expected': True, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n            book_id = extract_book_id(data, fallback_id=self.__class__.created_ids[0])\n        except Exception:\n>           pytest.fail(f\"[ERROR] Invalid book_id from Excel: '{data.get('book_id')}'\")\nE           Failed: [ERROR] Invalid book_id from Excel: 'None'\n\ntests\\test_api_resource.py:47: Failed"}, "description": "Updates users details by users ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "a6e2ee64-e66f-4bef-a8ab-6f678784dea1-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "6c613c2f-4730-4774-9c38-e234518a1e17-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "81caaeed-da33-49ba-a294-ea35f23a19ad-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'update_by_id', 'book_id': '', 'author': 'Updated Name', 'is_borrowed': 1.0, 'title': 'Updated Title', 'user': 'alice', 'expected': True, 'note': 'Valid-Update Full Data'}"}], "start": 1753271807197, "stop": 1753271807198, "uuid": "99789230-aad5-4d3c-ad61-0ec187b2487e", "historyId": "bfb27b4709dadb67f12ee231b47b3ba8", "testCaseId": "8f30c748a08cbeff2e9210952ed78284", "fullName": "tests.test_api_resource.TestusersAPI#test_update_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "20168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}