{"name": "test_create_users[Valid-Create Different user]", "status": "failed", "statusDetails": {"message": "AssertionError: 'id' must be int", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x00000227A999D5B0>, data = {'action': 'create', 'expected': True, 'job': '', 'name': '', ...}\n\n    @allure.description(\"Creates a new users and validates the response.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"create\", parametrize=True))\n    def test_create_users(self, data):\n        payload = build_users_payload(data)\n        res = self.users_api.users(payload=payload)\n        expected = parse_bool(data.get(\"expected\"))\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\response_validators.py:36: in validate_response\n    assert_common_fields(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = {'createdAt': '2025-07-23T16:28:05.287Z', 'id': '447', 'job': '', 'name': ''}\n\n    def assert_common_fields(data):\n        \"\"\"\n        Validates known fields if they exist.\n        Does NOT require all fields to be present.\n        \"\"\"\n    \n        if \"id\" in data:\n>           assert isinstance(data[\"id\"], int), \"'id' must be int\"\nE           AssertionError: 'id' must be int\n\nutils\\response_validators.py:8: AssertionError"}, "description": "Creates a new users and validates the response.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "0391604b-eff4-4276-a5ae-cebbec120961-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "c60ab5b3-0f83-4df2-a26d-f80ed6621545-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "c180dcdf-55a0-426c-81ae-5cc9a7b303a4-attachment.txt", "type": "text/plain"}, {"name": "[POST] request", "source": "cd840268-e671-41a5-be32-46cb386075ab-attachment.txt", "type": "text/plain"}, {"name": "response [201]", "source": "8f7a3b87-5bc6-42db-b757-ddb961871c29-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'create', 'id': '', 'name': '', 'job': '', 'expected': True, 'note': 'Valid-Create Different user'}"}], "start": 1753288083583, "stop": 1753288083901, "uuid": "05450221-314f-482c-aa5a-dc5855537a63", "historyId": "cbbfaefd8c86a032be2e63d4ce7c50f1", "testCaseId": "773c4b92666421217840b4ff76e73058", "fullName": "tests.test_api_resource.TestusersAPI#test_create_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "17972-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}