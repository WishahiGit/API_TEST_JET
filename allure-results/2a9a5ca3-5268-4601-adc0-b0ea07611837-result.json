{"name": "test_update_users[Valid-Update Full Data]", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a real number, not 'NoneType'", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x000001CE47D9F820>, data = {'action': 'update_by_id', 'additionalneeds': 'Breakfast', 'id': 1.0, 'checkin': Timestamp('2018-01-01 00:00:00'), ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n>       id = extract_id(data, fallback_id=self.__class__.created_ids[0])\n\ntests\\test_api_resource.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = {'action': 'update_by_id', 'additionalneeds': 'Breakfast', 'id': 1.0, 'checkin': Timestamp('2018-01-01 00:00:00'), ...}, fallback_id = 4029\n\n    def extract_id(data, fallback_id):\n        \"\"\"\n        Extracts id from input data.\n        If missing or invalid, uses fallback_id.\n        \"\"\"\n        raw = data.get(\"id\")\n>       return int(float(raw)) if str(raw).strip() else fallback_id\nE       TypeError: float() argument must be a string or a real number, not 'NoneType'\n\nutils\\input.py:19: TypeError"}, "description": "Updates users details by users ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "d2b806fe-825c-452d-b6dd-9528c801fdce-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "7bff7d8e-5659-4138-bfdf-5f66abf60c57-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "ce4a1a5d-edd2-44fa-b252-592a8dc84f5d-attachment.txt", "type": "text/plain"}, {"name": "[None] request", "source": "0511b0fe-e3c2-433d-b156-478ed6fbd257-attachment.txt", "type": "text/plain"}, {"name": "Allure Attachment Error", "source": "ba2e79e6-72a9-4314-afa0-fa90bf95ef4b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'update_by_id', 'id': 1.0, 'username': '', 'password': '', 'firstnam': 'dfdfbdfb', 'lastname': 'dffvfv', 'totalprice': 587.0, 'depositpaid': 1.0, 'checkin': Timestamp('2018-01-01 00:00:00'), 'checkout': Timestamp('2015-01-01 00:00:00'), 'additionalneeds': 'Breakfast', 'expected': True, 'note': 'Valid-Update Full Data'}"}], "start": 1753303715910, "stop": 1753303715911, "uuid": "514808bc-94d8-445a-af74-34fc8e3e5e9b", "historyId": "cd8c173ea838eba9ad91173cdfcdbf7e", "testCaseId": "b5cf996acdbf337d70d6630e3e1a8d62", "fullName": "tests.test_api_resource.TestusersAPI#test_update_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "13484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}