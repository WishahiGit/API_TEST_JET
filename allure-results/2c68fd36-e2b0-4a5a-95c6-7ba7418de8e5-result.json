{"name": "test_delete_users[Valid-Delete Second Book]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201/204, got 405", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x000001FE87B35260>, data = {'action': 'delete_by_id', 'additionalneeds': '', 'id': 2.0, 'checkin': NaT, ...}\n\n    @allure.description(\"Deletes a users by ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"delete_by_id\", parametrize=True))\n    def test_delete_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        raw_id = data.get(\"id\")\n        id = int(raw_id) if raw_id else self.__class__.created_ids.pop(0)\n    \n        print(\"\\n[DELETE] users ID:\", id)\n    \n        res = self.users_api.delete_users(id,None)\n    \n        print(\"[DELETE] Response Code:\", res.status_code)\n        print(\"[DELETE] Response Body:\", res.text)\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [405]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201, 204], f\"Expected 200/201/204, got {res.status_code}\"\nE           AssertionError: Expected 200/201/204, got 405\n\nutils\\response_validators.py:38: AssertionError"}, "description": "Deletes a users by ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "1f31ea24-1319-41d5-ad14-b57a19e66df1-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "9677cd5d-f543-449d-9444-831fae256048-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "bf2baf63-ced3-4079-a63e-6b62e4d4dc07-attachment.txt", "type": "text/plain"}, {"name": "[DELETE] request", "source": "dda98276-bd7a-4a34-a057-f522560bd385-attachment.txt", "type": "text/plain"}, {"name": "response [405]", "source": "5cbc731e-3902-4b18-83da-b6b4e864da95-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'delete_by_id', 'id': 2.0, 'username': '', 'password': '', 'firstname': '', 'lastname': '', 'totalprice': '', 'depositpaid': '', 'checkin': NaT, 'checkout': NaT, 'additionalneeds': '', 'expected': True, 'note': 'Valid-Delete Second Book'}"}], "start": 1753308051434, "stop": 1753308051992, "uuid": "287a22b3-763c-4fbb-95a6-997df574b7e5", "historyId": "7d9ef45163d53327d5606303c0de24d2", "testCaseId": "c63c59542b9fcf261cf624e91c5040a5", "fullName": "tests.test_api_resource.TestusersAPI#test_delete_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "20276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}