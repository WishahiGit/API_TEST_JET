{"name": "test_create_users[Valid-create]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201, got 401", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x0000023C05B27C50>, data = {'action': 'create', 'expected': True, 'job': 'engineer', 'name': 'John Doe', ...}\n\n    @allure.description(\"Creates a new users and validates the response.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"create\", parametrize=True))\n    def test_create_users(self, data):\n        payload = build_users_payload(data)\n        res = self.users_api.users(payload=payload)\n        expected = parse_bool(data.get(\"expected\"))\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [401]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201], f\"Expected 200/201, got {res.status_code}\"\nE           AssertionError: Expected 200/201, got 401\n\nutils\\response_validators.py:31: AssertionError"}, "description": "Creates a new users and validates the response.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "fbee78c1-ccd6-4187-82c2-bfa7cbaa70f1-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "22ad2cdc-41fe-4243-a9e4-87891c8bb8e8-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "6e44ac70-2b3d-4672-9534-3b2885e18303-attachment.txt", "type": "text/plain"}, {"name": "[POST] request", "source": "9d12848b-e589-412d-a15c-d7537e233a14-attachment.txt", "type": "text/plain"}, {"name": "response [401]", "source": "c0b6af1b-d867-41d3-ac4f-08fd04779727-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'create', 'id': '', 'name': 'John Doe', 'job': 'engineer', 'expected': True, 'note': 'Valid-create'}"}], "start": 1753285522083, "stop": 1753285522537, "uuid": "947e0a11-19c3-450d-9ab1-1ec6b44ee1a5", "historyId": "95a06d3a735ec02f6e3c62137bcf4b9f", "testCaseId": "773c4b92666421217840b4ff76e73058", "fullName": "tests.test_api_resource.TestusersAPI#test_create_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "10540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}