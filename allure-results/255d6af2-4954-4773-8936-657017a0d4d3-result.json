{"name": "test_delete_users[NoValid-Delete Invalid ID]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 400/404/405, got 201", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x000001FE87B30B50>, data = {'action': 'delete_by_id', 'additionalneeds': '', 'id': 0.0, 'checkin': NaT, ...}\n\n    @allure.description(\"Deletes a users by ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"delete_by_id\", parametrize=True))\n    def test_delete_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        raw_id = data.get(\"id\")\n        id = int(raw_id) if raw_id else self.__class__.created_ids.pop(0)\n    \n        print(\"\\n[DELETE] users ID:\", id)\n    \n        res = self.users_api.delete_users(id,None)\n    \n        print(\"[DELETE] Response Code:\", res.status_code)\n        print(\"[DELETE] Response Body:\", res.text)\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [201]>, expected = False\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n            assert res.status_code in [200, 201, 204], f\"Expected 200/201/204, got {res.status_code}\"\n            if res.status_code == 204:\n                return\n            if 'application/json' in res.headers.get('Content-Type', ''):\n                try:\n                    data = res.json()\n                    assert_common_fields(data)\n                except Exception as e:\n                    raise AssertionError(f\"Response is not valid JSON: {e}\")\n            else:\n                print(f\"Non-JSON response body: {res.text}\")\n        else:\n>           assert res.status_code in [400, 404, 405], f\"Expected 400/404/405, got {res.status_code}\"\nE           AssertionError: Expected 400/404/405, got 201\n\nutils\\response_validators.py:50: AssertionError"}, "description": "Deletes a users by ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "0fce340a-0089-4c4c-8e1a-6a9245550c7d-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "7666f1d9-5009-418b-9f6f-f1c711f0d776-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "0933029f-9601-4a8a-a232-98fc5c3ecff8-attachment.txt", "type": "text/plain"}, {"name": "[DELETE] request", "source": "3938b7cc-e158-46f4-aa16-1eeaece025b2-attachment.txt", "type": "text/plain"}, {"name": "response [201]", "source": "08242348-4e4b-411e-880c-c03d862b419b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'delete_by_id', 'id': 0.0, 'username': '', 'password': '', 'firstname': '', 'lastname': '', 'totalprice': '', 'depositpaid': '', 'checkin': NaT, 'checkout': NaT, 'additionalneeds': '', 'expected': False, 'note': 'NoValid-Delete Invalid ID'}"}], "start": 1753308052086, "stop": 1753308052645, "uuid": "f9d278a5-915e-433c-9912-7ef6e0f4aa9c", "historyId": "0ae7b476c286e11cf7c16115c27cb37b", "testCaseId": "c63c59542b9fcf261cf624e91c5040a5", "fullName": "tests.test_api_resource.TestusersAPI#test_delete_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "20276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}