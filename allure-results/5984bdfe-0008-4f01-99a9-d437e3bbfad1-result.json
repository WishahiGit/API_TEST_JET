{"name": "test_update_users[Valid-Partial Update]", "status": "failed", "statusDetails": {"message": "Failed: [ERROR] Invalid book_id from Excel: 'None'", "trace": "self = <tests.test_api_users.TestusersAPI object at 0x00000275FFFA1350>, data = {'action': 'update_by_id', 'author': 'Only Author', 'book_id': '', 'expected': True, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n>           book_id = extract_book_id(data, fallback_id=self.__class__.created_ids[0])\nE           IndexError: list index out of range\n\ntests\\test_api_users.py:45: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_api_users.TestusersAPI object at 0x00000275FFFA1350>, data = {'action': 'update_by_id', 'author': 'Only Author', 'book_id': '', 'expected': True, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n            book_id = extract_book_id(data, fallback_id=self.__class__.created_ids[0])\n        except Exception:\n>           pytest.fail(f\"[ERROR] Invalid book_id from Excel: '{data.get('book_id')}'\")\nE           Failed: [ERROR] Invalid book_id from Excel: 'None'\n\ntests\\test_api_users.py:47: Failed"}, "description": "Updates users details by users ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "e6f690d5-c46f-4ff2-9bb6-ed7e873f8c12-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "6ce75fe6-1519-4ded-b9d4-5a204ea297ca-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "16d74bd7-8682-44fc-a6ca-a5a4a9170157-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'update_by_id', 'book_id': '', 'author': 'Only Author', 'is_borrowed': '', 'title': 'Updated Title2', 'user': '', 'expected': True, 'note': 'Valid-Partial Update'}"}], "start": 1753267271068, "stop": 1753267271069, "uuid": "53de112b-320f-40ad-96d8-bd7c3a9700de", "historyId": "6d1cab318d84cfe78eb32026e5320b96", "testCaseId": "e775056b77608a21e6a8495ae6ec9ca4", "fullName": "tests.test_api_users.TestusersAPI#test_update_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_users"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "6412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_users"}]}