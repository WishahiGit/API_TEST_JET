{"name": "test_delete_users[Valid-Delete Second Book]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201/204, got 405", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x0000027F89A31260>, data = {'action': 'delete_by_id', 'additionalneeds': '', 'id': 2.0, 'checkin': NaT, ...}\n\n    @allure.description(\"Deletes a users by ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"delete_by_id\", parametrize=True))\n    def test_delete_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        raw_id = data.get(\"id\")\n        id = int(raw_id) if raw_id else self.__class__.created_ids.pop(0)\n    \n        print(\"\\n[DELETE] users ID:\", id)\n    \n        res = self.users_api.delete_users(id)\n    \n        print(\"[DELETE] Response Code:\", res.status_code)\n        print(\"[DELETE] Response Body:\", res.text)\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [405]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201, 204], f\"Expected 200/201/204, got {res.status_code}\"\nE           AssertionError: Expected 200/201/204, got 405\n\nutils\\response_validators.py:38: AssertionError"}, "description": "Deletes a users by ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "9bfaeee6-4c23-461a-996b-89390c9031fb-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "a793664e-e12d-4e61-8d2b-dbd5ca7710ff-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "9669e655-89f4-4be1-8d84-8c62d518b6a1-attachment.txt", "type": "text/plain"}, {"name": "[DELETE] request", "source": "fafcc570-5422-4545-9705-75a63c7083e9-attachment.txt", "type": "text/plain"}, {"name": "response [405]", "source": "5803cae6-db09-47ef-8437-6acc300598c1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'delete_by_id', 'id': 2.0, 'username': '', 'password': '', 'firstname': '', 'lastname': '', 'totalprice': '', 'depositpaid': '', 'checkin': NaT, 'checkout': NaT, 'additionalneeds': '', 'expected': True, 'note': 'Valid-Delete Second Book'}"}], "start": 1753306752442, "stop": 1753306753051, "uuid": "03ea4506-cb2c-4f69-8dac-bc30b5ea696f", "historyId": "7d9ef45163d53327d5606303c0de24d2", "testCaseId": "c63c59542b9fcf261cf624e91c5040a5", "fullName": "tests.test_api_resource.TestusersAPI#test_delete_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "5792-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}