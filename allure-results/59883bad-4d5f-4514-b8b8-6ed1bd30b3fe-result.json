{"name": "test_update_users[NoValid- Book not found]", "status": "failed", "statusDetails": {"message": "Failed: [ERROR] Invalid book_id from Excel: 'None'", "trace": "self = <tests.test_api_users.TestusersAPI object at 0x00000275FFFA0650>, data = {'action': 'update_by_id', 'author': 'Nobody', 'book_id': 0.0, 'expected': False, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n>           book_id = extract_book_id(data, fallback_id=self.__class__.created_ids[0])\nE           IndexError: list index out of range\n\ntests\\test_api_users.py:45: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_api_users.TestusersAPI object at 0x00000275FFFA0650>, data = {'action': 'update_by_id', 'author': 'Nobody', 'book_id': 0.0, 'expected': False, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n            book_id = extract_book_id(data, fallback_id=self.__class__.created_ids[0])\n        except Exception:\n>           pytest.fail(f\"[ERROR] Invalid book_id from Excel: '{data.get('book_id')}'\")\nE           Failed: [ERROR] Invalid book_id from Excel: 'None'\n\ntests\\test_api_users.py:47: Failed"}, "description": "Updates users details by users ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "4cfb33b7-247e-42b0-8eae-a484b61ab0f3-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "f680c6b5-cf43-41cb-afd7-7e3f8c11eaf2-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "1419b579-f1cf-4c7b-9d45-97ef89dda436-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'update_by_id', 'book_id': 0.0, 'author': 'Nobody', 'is_borrowed': 0.0, 'title': 'Ghost Book', 'user': '', 'expected': False, 'note': 'NoValid- Book not found'}"}], "start": 1753267271081, "stop": 1753267271084, "uuid": "ce058564-7498-4f7a-89ac-6d93f96cdab8", "historyId": "a3d47d09da407157f7ace69985ba3cd0", "testCaseId": "e775056b77608a21e6a8495ae6ec9ca4", "fullName": "tests.test_api_users.TestusersAPI#test_update_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_users"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "6412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_users"}]}