{"name": "test_update_posts[NoValid - Post not found]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 400/404, got 500", "trace": "self = <tests.test_api_users.TestPostsAPI object at 0x0000027C2E6B1490>, data = {'action': 'update', 'body': 'new', 'expected': False, 'id': 9999.0, ...}\n\n    @allure.description(\"Updates post details by post ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update\", parametrize=True))\n    def test_update_posts(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n            post_id = int(data.get(\"id\"))\n        except Exception:\n            pytest.fail(f\"[ERROR] Invalid post_id from Excel: '{data.get('id')}'\")\n    \n        payload = build_post_payload(data)\n        res = self.posts_api.update_posts(post_id, payload=payload)\n>       validate_response(res, expected)\n\ntests\\test_api_users.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nres = <Response [500]>, expected = False\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n            assert res.status_code in [200, 201], f\"Expected 200/201, got {res.status_code}\"\n            try:\n                data = res.json()\n            except Exception as e:\n                raise AssertionError(f\"Response is not valid JSON: {e}\")\n            assert_common_fields(data)\n        else:\n>           assert res.status_code in [400, 404], f\"Expected 400/404, got {res.status_code}\"\nE           AssertionError: Expected 400/404, got 500\n\nutils\\response_validators.py:36: AssertionError"}, "description": "Updates post details by post ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "e37b850d-0183-4247-a508-0b1575d35b08-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "9866de9e-342a-4ca6-813c-db16dc43a4ca-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "fee1c9a9-594b-4fb6-ae20-065ffaa2615c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'update', 'id': 9999.0, 'body': 'new', 'id': 'new', 'title': 'HALA', 'expected': False, 'note': 'NoValid - Post not found'}"}], "start": 1753215015938, "stop": 1753215016465, "uuid": "a921f00b-ecfa-44fa-98f4-1c940957f0af", "historyId": "cebca4c88bf72761ce9707dab29f9780", "testCaseId": "6038f7e55329c7bcf32f50ddd96b3265", "fullName": "tests.test_api_users.TestPostsAPI#test_update_posts", "labels": [{"name": "epic", "value": "posts API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_users"}, {"name": "subSuite", "value": "TestPostsAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "32708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_users"}]}