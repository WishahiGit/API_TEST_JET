{"name": "test_update_users[NoValid- Book not found]", "status": "failed", "statusDetails": {"message": "Failed: [ERROR] Invalid book_id from Excel: 'None'", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x000001EE03A84B50>, data = {'action': 'update_by_id', 'author': 'Nobody', 'book_id': 0.0, 'expected': False, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n>           book_id = extract_book_id(data, fallback_id=self.__class__.created_ids[0])\nE           IndexError: list index out of range\n\ntests\\test_api_resource.py:45: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_api_resource.TestusersAPI object at 0x000001EE03A84B50>, data = {'action': 'update_by_id', 'author': 'Nobody', 'book_id': 0.0, 'expected': False, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        try:\n            book_id = extract_book_id(data, fallback_id=self.__class__.created_ids[0])\n        except Exception:\n>           pytest.fail(f\"[ERROR] Invalid book_id from Excel: '{data.get('book_id')}'\")\nE           Failed: [ERROR] Invalid book_id from Excel: 'None'\n\ntests\\test_api_resource.py:47: Failed"}, "description": "Updates users details by users ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "1611a39d-c290-4fd9-84e4-282aefb11659-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "63102198-7f42-4f90-bbb5-3f11883539f2-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "6bc4da7d-ce15-4931-9a1b-4f00a2e6309a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'update_by_id', 'book_id': 0.0, 'author': 'Nobody', 'is_borrowed': 0.0, 'title': 'Ghost Book', 'user': '', 'expected': False, 'note': 'NoValid- Book not found'}"}], "start": 1753271807211, "stop": 1753271807212, "uuid": "827c0220-ce1a-4017-8756-20b045662cf6", "historyId": "829b53ed9a6f6fed97fcf763401943e3", "testCaseId": "8f30c748a08cbeff2e9210952ed78284", "fullName": "tests.test_api_resource.TestusersAPI#test_update_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "20168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}