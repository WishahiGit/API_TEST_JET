{"name": "test_update_users[NoValid- Book not found]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 400/404, got 403", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x000002C26C859C70>, data = {'action': 'update_by_id', 'additionalneeds': '', 'id': 999999.0, 'checkin': NaT, ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        id = extract_id(data, fallback_id=self.__class__.created_ids[0])\n        payload = build_users_payload(data)\n    \n        print(\"\\n[UPDATE] users ID:\", id)\n        print(\"[UPDATE] Payload:\", payload)\n    \n        res = self.users_api.update_users(id, payload=payload)\n    \n        print(\"[UPDATE] Response Code:\", res.status_code)\n        print(\"[UPDATE] Response Body:\", res.text)\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [403]>, expected = False\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n            assert res.status_code in [200, 201, 204], f\"Expected 200/201/204, got {res.status_code}\"\n            if res.status_code == 204:\n                return\n            try:\n                data = res.json()\n            except Exception as e:\n                raise AssertionError(f\"Response is not valid JSON: {e}\")\n            assert_common_fields(data)\n        else:\n>           assert res.status_code in [400, 404,405], f\"Expected 400/404, got {res.status_code}\"\nE           AssertionError: Expected 400/404, got 403\n\nutils\\response_validators.py:47: AssertionError"}, "description": "Updates users details by users ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "eb80e0a3-50e6-43b5-b2c8-63226eca8e50-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "3231ab57-c0b3-49f1-8661-385ff17936d2-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "74bf8288-138f-4f20-8f94-a931dc0ecff0-attachment.txt", "type": "text/plain"}, {"name": "[PUT] request", "source": "573121bd-9272-430f-afc0-b3f87e435685-attachment.txt", "type": "text/plain"}, {"name": "response [403]", "source": "577ad34c-ae60-4d76-9eae-4a185284525c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'update_by_id', 'id': 999999.0, 'username': '', 'password': '', 'firstname': '', 'lastname': '', 'totalprice': '', 'depositpaid': '', 'checkin': NaT, 'checkout': NaT, 'additionalneeds': '', 'expected': False, 'note': 'NoValid- Book not found'}"}], "start": 1753307379379, "stop": 1753307379984, "uuid": "3b12332b-03d1-4ea1-a219-fb24563dc91a", "historyId": "f0b01e43e31555aab78548d89af5e0bb", "testCaseId": "b5cf996acdbf337d70d6630e3e1a8d62", "fullName": "tests.test_api_resource.TestusersAPI#test_update_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "9856-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}