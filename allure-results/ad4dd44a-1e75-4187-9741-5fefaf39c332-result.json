{"name": "test_delete_users[Valid-Delete Second Book]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201, got 401", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x0000023C05B2D9A0>, data = {'action': 'delete_by_id', 'expected': True, 'job': '', 'name': '', ...}\n\n    @allure.description(\"Deletes a users by ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"delete_by_id\", parametrize=True))\n    def test_delete_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        raw_id = data.get(\"id\")\n        id = int(raw_id) if raw_id else self.__class__.created_ids.pop(0)\n        res = self.users_api.delete_users(id)\n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [401]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201], f\"Expected 200/201, got {res.status_code}\"\nE           AssertionError: Expected 200/201, got 401\n\nutils\\response_validators.py:31: AssertionError"}, "description": "Deletes a users by ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "39844680-5714-424a-8328-9d808584fe04-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "9199fef6-ba42-473a-b889-4191ef4d09bc-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "a0b97415-658c-4bcc-8457-64ab5fe8dd9c-attachment.txt", "type": "text/plain"}, {"name": "[DELETE] request", "source": "b0d2bde1-1019-4be0-bb87-2cb735184629-attachment.txt", "type": "text/plain"}, {"name": "response [401]", "source": "c3b55b78-3346-4ee5-9908-a3cfbebb0b72-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'delete_by_id', 'id': 1.0, 'name': '', 'job': '', 'expected': True, 'note': 'Valid-Delete Second Book'}"}], "start": 1753285522965, "stop": 1753285523249, "uuid": "34b32977-5e11-4ba2-994e-08c1e31b7e19", "historyId": "133b404cc2a6b95bfcff2b474bb0a27e", "testCaseId": "ffa5fb6b1ccd28f13d6d59b7a1894c7f", "fullName": "tests.test_api_resource.TestusersAPI#test_delete_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "10540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}