{"name": "test_create_users[Valid-Create Different user]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201, got 404", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x0000022C0C7E5220>, data = {'action': 'create', 'expected': True, 'job': 'dev', 'name': '', ...}\n\n    @allure.description(\"Creates a new users and validates the response.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"create\", parametrize=True))\n    def test_create_users(self, data):\n        payload = build_users_payload(data)\n        res = self.users_api.users(payload=payload)\n        expected = parse_bool(data.get(\"expected\"))\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [404]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201], f\"Expected 200/201, got {res.status_code}\"\nE           AssertionError: Expected 200/201, got 404\n\nutils\\response_validators.py:31: AssertionError"}, "description": "Creates a new users and validates the response.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "f77becdb-a0cd-466c-a10a-8cbb883dc3e7-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "dcece1e7-14c3-4f20-996f-6ae439a4d400-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "57873274-de6b-4587-89ee-8504e4d1eed2-attachment.txt", "type": "text/plain"}, {"name": "[POST] request", "source": "007506fc-e247-42ee-9b7b-958bac808d47-attachment.txt", "type": "text/plain"}, {"name": "response [404]", "source": "6daf9ebc-d081-4737-bb13-fe8b144e925d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'create', 'id': '', 'name': '', 'job': 'dev', 'expected': True, 'note': 'Valid-Create Different user'}"}], "start": 1753285836248, "stop": 1753285836513, "uuid": "086b93cf-0050-4dce-96fc-1ff9191d1655", "historyId": "76c258f7d677ce3e9435c92c0fef7871", "testCaseId": "773c4b92666421217840b4ff76e73058", "fullName": "tests.test_api_resource.TestusersAPI#test_create_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "9660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}