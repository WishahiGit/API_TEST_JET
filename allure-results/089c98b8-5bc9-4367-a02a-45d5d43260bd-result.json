{"name": "test_create_users[Valid-create]", "status": "failed", "statusDetails": {"message": "AssertionError: 'id' must be int", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x000002D5CD1779D0>, data = {'action': 'create', 'expected': True, 'job': 'engineer', 'name': 'John Doe', ...}\n\n    @allure.description(\"Creates a new users and validates the response.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"create\", parametrize=True))\n    def test_create_users(self, data):\n        payload = build_users_payload(data)\n        res = self.users_api.users(payload=payload)\n        expected = parse_bool(data.get(\"expected\"))\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\response_validators.py:36: in validate_response\n    assert_common_fields(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = {'createdAt': '2025-07-23T15:54:53.312Z', 'id': '930', 'job': 'engineer', 'name': 'John Doe'}\n\n    def assert_common_fields(data):\n        \"\"\"\n        Validates known fields if they exist.\n        Does NOT require all fields to be present.\n        \"\"\"\n    \n        if \"id\" in data:\n>           assert isinstance(data[\"id\"], int), \"'id' must be int\"\nE           AssertionError: 'id' must be int\n\nutils\\response_validators.py:8: AssertionError"}, "description": "Creates a new users and validates the response.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "67ae7c12-ca54-4454-9daa-c0b5fe61ee5c-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "1c9e3071-1554-45cc-894d-1f55ce19690b-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "4108e25d-83d4-47a9-a059-6c1b629fd4ef-attachment.txt", "type": "text/plain"}, {"name": "[POST] request", "source": "db8dfcbe-9c1a-40d8-8939-06a773ea4803-attachment.txt", "type": "text/plain"}, {"name": "response [201]", "source": "f6d2279c-780a-4657-b242-8cadf58a76d6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'create', 'id': '', 'name': 'John Doe', 'job': 'engineer', 'expected': True, 'note': 'Valid-create'}"}], "start": 1753286091597, "stop": 1753286091932, "uuid": "7997afab-a98b-49d0-8284-fbb415810944", "historyId": "95a06d3a735ec02f6e3c62137bcf4b9f", "testCaseId": "773c4b92666421217840b4ff76e73058", "fullName": "tests.test_api_resource.TestusersAPI#test_create_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "9848-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}