{"name": "test_delete_users[Valid-Delete Second Book]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201/204, got 403", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x00000156EEBE1260>, data = {'action': 'delete_by_id', 'additionalneeds': '', 'id': 1.0, 'checkin': NaT, ...}\n\n    @allure.description(\"Deletes a users by ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"delete_by_id\", parametrize=True))\n    def test_delete_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        raw_id = data.get(\"id\")\n        id = int(raw_id) if raw_id else self.__class__.created_ids.pop(0)\n        res = self.users_api.delete_users(id)\n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [403]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201, 204], f\"Expected 200/201/204, got {res.status_code}\"\nE           AssertionError: Expected 200/201/204, got 403\n\nutils\\response_validators.py:38: AssertionError"}, "description": "Deletes a users by ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "a8701698-9b7f-427e-b733-dac428ef4f23-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "ece90910-90c3-4801-a89f-c1e2cc0b2908-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "db4caf81-d517-4764-bbeb-620893ca562f-attachment.txt", "type": "text/plain"}, {"name": "[DELETE] request", "source": "1b01efa8-4db5-4955-9398-d955f7359a95-attachment.txt", "type": "text/plain"}, {"name": "response [403]", "source": "9d504d80-0a9c-4171-8ea0-d46849d94e9e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'delete_by_id', 'id': 1.0, 'username': '', 'password': '', 'firstnam': '', 'lastname': '', 'totalprice': '', 'depositpaid': '', 'checkin': NaT, 'checkout': NaT, 'additionalneeds': '', 'expected': True, 'note': 'Valid-Delete Second Book'}"}], "start": 1753302844024, "stop": 1753302844632, "uuid": "849de849-897b-45d7-beb7-ae208c7ec7d3", "historyId": "ee762a608c5861eb76936dace43e5444", "testCaseId": "c63c59542b9fcf261cf624e91c5040a5", "fullName": "tests.test_api_resource.TestusersAPI#test_delete_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "16508-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}