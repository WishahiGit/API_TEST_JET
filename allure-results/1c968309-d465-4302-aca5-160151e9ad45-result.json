{"name": "test_create_users[Valid]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201/204, got 422", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x000001FBFFF24CD0>, data = {'action': 'create_user', 'email': 'ALICE@GMAIL..COM', 'expected': True, 'gender': 'male', ...}\n\n    @allure.description(\"Creates a new users and validates the response.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"create_user\", parametrize=True))\n    def test_create_users(self, data):\n        payload = build_users_payload(data)\n        res = self.users_api.create_users(payload=payload)\n        expected = parse_bool(data.get(\"expected\"))\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [422]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201, 204], f\"Expected 200/201/204, got {res.status_code}\"\nE           AssertionError: Expected 200/201/204, got 422\n\nutils\\response_validators.py:31: AssertionError"}, "description": "Creates a new users and validates the response.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "fac9a6ec-5a43-474f-8c4e-50cdcc17aa9a-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "cc018588-694a-40e2-a846-814e1ad8e83c-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "83c8a116-3f08-46aa-ac31-bf65ea344f51-attachment.txt", "type": "text/plain"}, {"name": "[POST] request", "source": "5156f67e-033e-4f85-ba47-553be42de9f4-attachment.txt", "type": "text/plain"}, {"name": "response [422]", "source": "549bc55f-ec17-4944-8719-68b8f3eb2953-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'create_user', 'id': '', 'name': 'ALICE', 'email': 'ALICE@GMAIL..COM', 'gender': 'male', 'status': 'active', 'expected': True, 'note': 'Valid'}"}], "start": 1753358762948, "stop": 1753358764491, "uuid": "5d8287fc-09f8-4022-86cf-f0aa2b537ec2", "historyId": "e72539b40e90e15228d07586ece9b2a3", "testCaseId": "773c4b92666421217840b4ff76e73058", "fullName": "tests.test_api_resource.TestusersAPI#test_create_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "21252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}