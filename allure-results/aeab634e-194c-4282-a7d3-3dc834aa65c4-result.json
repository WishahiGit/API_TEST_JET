{"name": "test_delete_users[NoValid-Delete Invalid ID]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201, got 404", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x0000022C0C7618B0>, data = {'action': 'delete_by_id', 'expected': True, 'job': '', 'name': '', ...}\n\n    @allure.description(\"Deletes a users by ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"delete_by_id\", parametrize=True))\n    def test_delete_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        raw_id = data.get(\"id\")\n        id = int(raw_id) if raw_id else self.__class__.created_ids.pop(0)\n        res = self.users_api.delete_users(id)\n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [404]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201], f\"Expected 200/201, got {res.status_code}\"\nE           AssertionError: Expected 200/201, got 404\n\nutils\\response_validators.py:31: AssertionError"}, "description": "Deletes a users by ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "1955f298-f711-4be1-8151-acd4eb2129f4-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "115ebad8-abfd-439c-8b76-59fdc58d96ca-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "273960b5-7cc6-45bc-977d-952c804175f7-attachment.txt", "type": "text/plain"}, {"name": "[DELETE] request", "source": "3b4d91bf-9ef8-4b29-8b1d-c4cb88a96a1e-attachment.txt", "type": "text/plain"}, {"name": "response [404]", "source": "844789db-a200-4cf1-827f-84633b78c9e3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'delete_by_id', 'id': -1.0, 'name': '', 'job': '', 'expected': True, 'note': 'NoValid-Delete Invalid ID'}"}], "start": 1753285836878, "stop": 1753285837126, "uuid": "6eefcb73-ed32-416c-8596-f6a66f0450bc", "historyId": "b67f1bf0325be89258dbca9a1c4fef7d", "testCaseId": "ffa5fb6b1ccd28f13d6d59b7a1894c7f", "fullName": "tests.test_api_resource.TestusersAPI#test_delete_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "9660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}