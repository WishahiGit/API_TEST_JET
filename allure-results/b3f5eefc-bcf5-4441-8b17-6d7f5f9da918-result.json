{"name": "test_update_users[Valid-Update Full Data]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200/201/204, got 403", "trace": "self = <tests.test_api_resource.TestusersAPI object at 0x0000022DEEB6FBB0>, data = {'action': 'update_by_id', 'additionalneeds': 'Breakfast', 'id': 1.0, 'checkin': Timestamp('2018-01-01 00:00:00'), ...}\n\n    @allure.description(\"Updates users details by users ID.\")\n    @pytest.mark.parametrize(*load_test_data(\"apis\", \"update_by_id\", parametrize=True))\n    def test_update_users(self, data):\n        expected = parse_bool(data.get(\"expected\"))\n        id = extract_id(data, fallback_id=self.__class__.created_ids[0])\n        payload = build_users_payload(data)\n    \n        print(\"\\n[UPDATE] users ID:\", id)\n        print(\"[UPDATE] Payload:\", payload)\n    \n        res = self.users_api.update_users(id, payload=payload)\n    \n        print(\"[UPDATE] Response Code:\", res.status_code)\n        print(\"[UPDATE] Response Body:\", res.text)\n    \n>       validate_response(res, expected)\n\ntests\\test_api_resource.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [403]>, expected = True\n\n    def validate_response(res, expected):\n        \"\"\"\n        Validates the HTTP response status and JSON fields for single-object responses.\n        \"\"\"\n        if expected:\n>           assert res.status_code in [200, 201, 204], f\"Expected 200/201/204, got {res.status_code}\"\nE           AssertionError: Expected 200/201/204, got 403\n\nutils\\response_validators.py:38: AssertionError"}, "description": "Updates users details by users ID.", "attachments": [{"name": "‚è∞ Test Start Time", "source": "34a7a8e5-b8ab-466b-8f48-26e33d7b8810-attachment.txt", "type": "text/plain"}, {"name": "üèÅ Test End Time", "source": "dd2d4fb8-8f80-411e-854e-419fe62684d9-attachment.txt", "type": "text/plain"}, {"name": "‚è±Ô∏è Test Duration", "source": "7ee3323a-06a1-4117-bf2e-c9832fba5a6b-attachment.txt", "type": "text/plain"}, {"name": "[PUT] request", "source": "55d3a9e4-0f2b-4c5e-a42d-6880ef5eabb9-attachment.txt", "type": "text/plain"}, {"name": "response [403]", "source": "32bc083e-d0f1-4639-a304-2996b1846b03-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'action': 'update_by_id', 'id': 1.0, 'username': '', 'password': '', 'firstname': 'dfdfbdfb', 'lastname': 'dffvfv', 'totalprice': 587.0, 'depositpaid': 1.0, 'checkin': Timestamp('2018-01-01 00:00:00'), 'checkout': Timestamp('2015-01-01 00:00:00'), 'additionalneeds': 'Breakfast', 'expected': True, 'note': 'Valid-Update Full Data'}"}], "start": 1753308646350, "stop": 1753308646963, "uuid": "0d994afc-1f53-42c4-a82f-b4f0840351be", "historyId": "6d772aceb03a2d023827aea731d58246", "testCaseId": "b5cf996acdbf337d70d6630e3e1a8d62", "fullName": "tests.test_api_resource.TestusersAPI#test_update_users", "labels": [{"name": "epic", "value": "users API"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_resource"}, {"name": "subSuite", "value": "TestusersAPI"}, {"name": "host", "value": "Saber"}, {"name": "thread", "value": "10308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_resource"}]}